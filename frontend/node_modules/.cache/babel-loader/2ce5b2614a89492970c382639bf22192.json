{"ast":null,"code":"import axios from 'axios';\nexport const axiosSetup = () => {\n  axios.defaults.withCredentials = true;\n  axios.interceptors.response.use(response => {\n    return response;\n  }, function (error) {\n    if (error.response.status === 401) {\n      window.location.href = '/login';\n      return Promise.reject(error);\n    } else {\n      return error.response.data.error;\n    }\n  });\n};\nexport const axiosGetRequest = async path => {\n  return (await axios.get(`http://localhost:8082/${path}`)).data;\n};\nexport const axiosPostRequest = async (path, data) => {\n  return axios.post(`http://localhost:8082/${path}`, data);\n};","map":{"version":3,"sources":["/Users/kellie/Desktop/abc/frontend/src/axiosRequest.js"],"names":["axios","axiosSetup","defaults","withCredentials","interceptors","response","use","error","status","window","location","href","Promise","reject","data","axiosGetRequest","path","get","axiosPostRequest","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5BD,EAAAA,KAAK,CAACE,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACAH,EAAAA,KAAK,CAACI,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAiCD,QAAD,IAAc;AAC1C,WAAOA,QAAP;AACH,GAFD,EAEG,UAAUE,KAAV,EAAiB;AAChB,QAAIA,KAAK,CAACF,QAAN,CAAeG,MAAf,KAA0B,GAA9B,EAAmC;AAC/BC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeN,KAAf,CAAP;AACH,KAHD,MAGO;AACH,aAAOA,KAAK,CAACF,QAAN,CAAeS,IAAf,CAAoBP,KAA3B;AACH;AACJ,GATD;AAUH,CAZM;AAcP,OAAO,MAAMQ,eAAe,GAAG,MAAOC,IAAP,IAAgB;AAC3C,SAAO,CAAC,MAAMhB,KAAK,CAACiB,GAAN,CAAW,yBAAwBD,IAAK,EAAxC,CAAP,EAAmDF,IAA1D;AACH,CAFM;AAIP,OAAO,MAAMI,gBAAgB,GAAG,OAAOF,IAAP,EAAaF,IAAb,KAAsB;AAClD,SAAOd,KAAK,CAACmB,IAAN,CAAY,yBAAwBH,IAAK,EAAzC,EAA4CF,IAA5C,CAAP;AACH,CAFM","sourcesContent":["import axios from 'axios';\n\nexport const axiosSetup = () => {\n    axios.defaults.withCredentials = true;\n    axios.interceptors.response.use((response) => {\n        return response;\n    }, function (error) {\n        if (error.response.status === 401) {\n            window.location.href = '/login';\n            return Promise.reject(error);\n        } else {\n            return error.response.data.error\n        }\n    });\n}\n\nexport const axiosGetRequest = async (path) => {\n    return (await axios.get(`http://localhost:8082/${path}`)).data;\n};\n\nexport const axiosPostRequest = async (path, data) => {\n    return axios.post(`http://localhost:8082/${path}`, data);\n}"]},"metadata":{},"sourceType":"module"}